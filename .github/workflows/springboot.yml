# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Setup:
      runs-on: [self-hosted, linux, x64]
      defaults:
        run:
          shell: bash
      steps:
      
          - uses: actions/checkout@v2
          
          - uses: actions/setup-java@v2
            with:
              java-version: '17'
              distribution: 'zulu'
              
          - name: Validate Gradle wrapper
            uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
            
          - name: Build with Gradle
            uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
            with:
              arguments: build
              gradle-version: 7.3.3
              build-root-directory: ./EFP_Video_Dashboard_Backend
              
#           - uses: actions/upload-artifact@v3
#             with:
#               name: Package
#               path: ./EFP_Video_Dashboard_Backend/build/libs
              
          - name: build jar
            run: ./gradlew clean
            working-directory: ./EFP_Video_Dashboard_Backend
              
          - name: build jar
            run: ./gradlew build
            working-directory: ./EFP_Video_Dashboard_Backend
            
          - name: start service 
            run: systemctl restart EFPBackend
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
